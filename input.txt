0 1 2
0 0 0

8 34 1
8 8 2

5 21 21
21 5 3

5 144 144
21 1 1

0 3 0
34 144 3

2584 0 0
0 0 0








/*

簡述	General info:
Problem input will be handled by main() using 6 consecutive cin commands.
A sample input could be:
0 1 2
0 0 0
Any non-interger input will be treated as a request to quit the program.
 
Your solver receives input from main() via an arrayboard, which is a 2x3 integer array.
However, you are highly encouraged to write your solver using a bitboard.
 
Regarding correctness:
Your program should return the expected score of a given position if you choose the best move to play.
So for every input it should have two outputs, the expected value (a double), and the best direction to play (UP, RIGHT, DOWN, LEFT, or CANNOT MOVE)
Eg.
8 34 1
8 8 2
Let the above position be called P1,
your program should tell me the best move to play is to move UP, and that the expected value is 3.
 
Eg.
5 21 21
21 5 3
Let's call this P2, for which the best move is RIGHT, and the score is
8 + 0.75 * x + 0.25 * y, where x is the score for the following position (P2, move right, generate a 1 in the empty grid)

5 21 21
1 21 8
this is a game over, so x = 0

and y is the score for the following position (P2, move right, generate a 3 in the empty grid)
5 21 21
3 21 8
so y = 8.

The score for P2 is therefore
8 + 0.75 * 0 + 0.25 * 8 = 10
 

Eg.
You can verify this result by hand:
5 144 144
21 1 1
LEFT, 7.625

Here is another sample for verification:
0 3 0
34 144 3
The best direction should be UP, expected value = 38.87959761

Impossible positions should have a value of -1.
Eg.
2584 0 0
0 0 0
 
Miscellaneous:
Further details will be updated, including some sample inputs/outputs, any corrections if I've made a mistake, rules, and any other changes I might make to the framework.
Like project 1, I will be overwriting everything in the framework except Fib2x3Solver.h and .cpp, so DO NOT MODIFY THEM FOR THE DEMO!
 
You are of course welcome to e-mail me or ask any questions in person!


*/
